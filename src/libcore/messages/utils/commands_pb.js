/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ledger.core.message.utils.CreateXpubFromPointsRequest', null, global);
goog.exportSymbol('proto.ledger.core.message.utils.CreateXpubFromPointsResponse', null, global);
goog.exportSymbol('proto.ledger.core.message.utils.UtilsRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ledger.core.message.utils.CreateXpubFromPointsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ledger.core.message.utils.CreateXpubFromPointsRequest.displayName = 'proto.ledger.core.message.utils.CreateXpubFromPointsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ledger.core.message.utils.CreateXpubFromPointsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ledger.core.message.utils.CreateXpubFromPointsResponse.displayName = 'proto.ledger.core.message.utils.CreateXpubFromPointsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ledger.core.message.utils.UtilsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ledger.core.message.utils.UtilsRequest.oneofGroups_);
};
goog.inherits(proto.ledger.core.message.utils.UtilsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ledger.core.message.utils.UtilsRequest.displayName = 'proto.ledger.core.message.utils.UtilsRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ledger.core.message.utils.CreateXpubFromPointsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ledger.core.message.utils.CreateXpubFromPointsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    versionPrefix: jspb.Message.getFieldWithDefault(msg, 1, ""),
    depth: jspb.Message.getFieldWithDefault(msg, 2, 0),
    parentPublicPoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    index: jspb.Message.getFieldWithDefault(msg, 4, 0),
    chainCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    publicPoint: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ledger.core.message.utils.CreateXpubFromPointsRequest}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ledger.core.message.utils.CreateXpubFromPointsRequest;
  return proto.ledger.core.message.utils.CreateXpubFromPointsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ledger.core.message.utils.CreateXpubFromPointsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ledger.core.message.utils.CreateXpubFromPointsRequest}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionPrefix(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDepth(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentPublicPoint(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicPoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ledger.core.message.utils.CreateXpubFromPointsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ledger.core.message.utils.CreateXpubFromPointsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersionPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDepth();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getParentPublicPoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getChainCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPublicPoint();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string version_prefix = 1;
 * @return {string}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.getVersionPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.setVersionPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 depth = 2;
 * @return {number}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.setDepth = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string parent_public_point = 3;
 * @return {string}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.getParentPublicPoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.setParentPublicPoint = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 index = 4;
 * @return {number}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string chain_code = 5;
 * @return {string}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.getChainCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.setChainCode = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string public_point = 6;
 * @return {string}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.getPublicPoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.ledger.core.message.utils.CreateXpubFromPointsRequest.prototype.setPublicPoint = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ledger.core.message.utils.CreateXpubFromPointsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ledger.core.message.utils.CreateXpubFromPointsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    xpub: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ledger.core.message.utils.CreateXpubFromPointsResponse}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ledger.core.message.utils.CreateXpubFromPointsResponse;
  return proto.ledger.core.message.utils.CreateXpubFromPointsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ledger.core.message.utils.CreateXpubFromPointsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ledger.core.message.utils.CreateXpubFromPointsResponse}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setXpub(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ledger.core.message.utils.CreateXpubFromPointsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ledger.core.message.utils.CreateXpubFromPointsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXpub();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string xpub = 1;
 * @return {string}
 */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse.prototype.getXpub = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ledger.core.message.utils.CreateXpubFromPointsResponse.prototype.setXpub = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ledger.core.message.utils.UtilsRequest.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.ledger.core.message.utils.UtilsRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  XPUB_FROM_POINTS: 1
};

/**
 * @return {proto.ledger.core.message.utils.UtilsRequest.RequestCase}
 */
proto.ledger.core.message.utils.UtilsRequest.prototype.getRequestCase = function() {
  return /** @type {proto.ledger.core.message.utils.UtilsRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.ledger.core.message.utils.UtilsRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ledger.core.message.utils.UtilsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ledger.core.message.utils.UtilsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ledger.core.message.utils.UtilsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ledger.core.message.utils.UtilsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    xpubFromPoints: (f = msg.getXpubFromPoints()) && proto.ledger.core.message.utils.CreateXpubFromPointsRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ledger.core.message.utils.UtilsRequest}
 */
proto.ledger.core.message.utils.UtilsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ledger.core.message.utils.UtilsRequest;
  return proto.ledger.core.message.utils.UtilsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ledger.core.message.utils.UtilsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ledger.core.message.utils.UtilsRequest}
 */
proto.ledger.core.message.utils.UtilsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ledger.core.message.utils.CreateXpubFromPointsRequest;
      reader.readMessage(value,proto.ledger.core.message.utils.CreateXpubFromPointsRequest.deserializeBinaryFromReader);
      msg.setXpubFromPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ledger.core.message.utils.UtilsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ledger.core.message.utils.UtilsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ledger.core.message.utils.UtilsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ledger.core.message.utils.UtilsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXpubFromPoints();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ledger.core.message.utils.CreateXpubFromPointsRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional CreateXpubFromPointsRequest xpub_from_points = 1;
 * @return {?proto.ledger.core.message.utils.CreateXpubFromPointsRequest}
 */
proto.ledger.core.message.utils.UtilsRequest.prototype.getXpubFromPoints = function() {
  return /** @type{?proto.ledger.core.message.utils.CreateXpubFromPointsRequest} */ (
    jspb.Message.getWrapperField(this, proto.ledger.core.message.utils.CreateXpubFromPointsRequest, 1));
};


/** @param {?proto.ledger.core.message.utils.CreateXpubFromPointsRequest|undefined} value */
proto.ledger.core.message.utils.UtilsRequest.prototype.setXpubFromPoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ledger.core.message.utils.UtilsRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ledger.core.message.utils.UtilsRequest.prototype.clearXpubFromPoints = function() {
  this.setXpubFromPoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ledger.core.message.utils.UtilsRequest.prototype.hasXpubFromPoints = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.ledger.core.message.utils);
